|i2c_eeprom_test
clk => clk.IN3
rst_n => rst_n.IN1
key1 => key1.IN1
i2c_sda <> i2c_sda
i2c_scl <> i2c_scl
seg_sel[0] <= seg_scan:seg_scan_m0.seg_sel
seg_sel[1] <= seg_scan:seg_scan_m0.seg_sel
seg_sel[2] <= seg_scan:seg_scan_m0.seg_sel
seg_sel[3] <= seg_scan:seg_scan_m0.seg_sel
seg_sel[4] <= seg_scan:seg_scan_m0.seg_sel
seg_sel[5] <= seg_scan:seg_scan_m0.seg_sel
seg_data[0] <= seg_scan:seg_scan_m0.seg_data
seg_data[1] <= seg_scan:seg_scan_m0.seg_data
seg_data[2] <= seg_scan:seg_scan_m0.seg_data
seg_data[3] <= seg_scan:seg_scan_m0.seg_data
seg_data[4] <= seg_scan:seg_scan_m0.seg_data
seg_data[5] <= seg_scan:seg_scan_m0.seg_data
seg_data[6] <= seg_scan:seg_scan_m0.seg_data
seg_data[7] <= seg_scan:seg_scan_m0.seg_data


|i2c_eeprom_test|ax_debounce:ax_debounce_m0
clk => button_negedge~reg0.CLK
clk => button_posedge~reg0.CLK
clk => button_out_d0.CLK
clk => button_out~reg0.CLK
clk => q_reg[0].CLK
clk => q_reg[1].CLK
clk => q_reg[2].CLK
clk => q_reg[3].CLK
clk => q_reg[4].CLK
clk => q_reg[5].CLK
clk => q_reg[6].CLK
clk => q_reg[7].CLK
clk => q_reg[8].CLK
clk => q_reg[9].CLK
clk => q_reg[10].CLK
clk => q_reg[11].CLK
clk => q_reg[12].CLK
clk => q_reg[13].CLK
clk => q_reg[14].CLK
clk => q_reg[15].CLK
clk => q_reg[16].CLK
clk => q_reg[17].CLK
clk => q_reg[18].CLK
clk => q_reg[19].CLK
clk => q_reg[20].CLK
clk => q_reg[21].CLK
clk => q_reg[22].CLK
clk => q_reg[23].CLK
clk => q_reg[24].CLK
clk => q_reg[25].CLK
clk => q_reg[26].CLK
clk => q_reg[27].CLK
clk => q_reg[28].CLK
clk => q_reg[29].CLK
clk => q_reg[30].CLK
clk => q_reg[31].CLK
clk => DFF2.CLK
clk => DFF1.CLK
rst => button_negedge~reg0.ACLR
rst => button_posedge~reg0.ACLR
rst => button_out_d0.PRESET
rst => button_out~reg0.PRESET
rst => q_reg[0].ACLR
rst => q_reg[1].ACLR
rst => q_reg[2].ACLR
rst => q_reg[3].ACLR
rst => q_reg[4].ACLR
rst => q_reg[5].ACLR
rst => q_reg[6].ACLR
rst => q_reg[7].ACLR
rst => q_reg[8].ACLR
rst => q_reg[9].ACLR
rst => q_reg[10].ACLR
rst => q_reg[11].ACLR
rst => q_reg[12].ACLR
rst => q_reg[13].ACLR
rst => q_reg[14].ACLR
rst => q_reg[15].ACLR
rst => q_reg[16].ACLR
rst => q_reg[17].ACLR
rst => q_reg[18].ACLR
rst => q_reg[19].ACLR
rst => q_reg[20].ACLR
rst => q_reg[21].ACLR
rst => q_reg[22].ACLR
rst => q_reg[23].ACLR
rst => q_reg[24].ACLR
rst => q_reg[25].ACLR
rst => q_reg[26].ACLR
rst => q_reg[27].ACLR
rst => q_reg[28].ACLR
rst => q_reg[29].ACLR
rst => q_reg[30].ACLR
rst => q_reg[31].ACLR
rst => DFF2.ACLR
rst => DFF1.ACLR
button_in => DFF1.DATAIN
button_posedge <= button_posedge~reg0.DB_MAX_OUTPUT_PORT_TYPE
button_negedge <= button_negedge~reg0.DB_MAX_OUTPUT_PORT_TYPE
button_out <= button_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|i2c_eeprom_test|seg_decoder:seg_decoder_m0
bin_data[0] => Decoder0.IN3
bin_data[1] => Decoder0.IN2
bin_data[2] => Decoder0.IN1
bin_data[3] => Decoder0.IN0
seg_data[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
seg_data[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
seg_data[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
seg_data[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
seg_data[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
seg_data[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
seg_data[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|i2c_eeprom_test|seg_decoder:seg_decoder_m1
bin_data[0] => Decoder0.IN3
bin_data[1] => Decoder0.IN2
bin_data[2] => Decoder0.IN1
bin_data[3] => Decoder0.IN0
seg_data[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
seg_data[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
seg_data[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
seg_data[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
seg_data[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
seg_data[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
seg_data[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|i2c_eeprom_test|seg_scan:seg_scan_m0
clk => seg_data[0]~reg0.CLK
clk => seg_data[1]~reg0.CLK
clk => seg_data[2]~reg0.CLK
clk => seg_data[3]~reg0.CLK
clk => seg_data[4]~reg0.CLK
clk => seg_data[5]~reg0.CLK
clk => seg_data[6]~reg0.CLK
clk => seg_data[7]~reg0.CLK
clk => seg_sel[0]~reg0.CLK
clk => seg_sel[1]~reg0.CLK
clk => seg_sel[2]~reg0.CLK
clk => seg_sel[3]~reg0.CLK
clk => seg_sel[4]~reg0.CLK
clk => seg_sel[5]~reg0.CLK
clk => scan_sel[0].CLK
clk => scan_sel[1].CLK
clk => scan_sel[2].CLK
clk => scan_sel[3].CLK
clk => scan_timer[0].CLK
clk => scan_timer[1].CLK
clk => scan_timer[2].CLK
clk => scan_timer[3].CLK
clk => scan_timer[4].CLK
clk => scan_timer[5].CLK
clk => scan_timer[6].CLK
clk => scan_timer[7].CLK
clk => scan_timer[8].CLK
clk => scan_timer[9].CLK
clk => scan_timer[10].CLK
clk => scan_timer[11].CLK
clk => scan_timer[12].CLK
clk => scan_timer[13].CLK
clk => scan_timer[14].CLK
clk => scan_timer[15].CLK
clk => scan_timer[16].CLK
clk => scan_timer[17].CLK
clk => scan_timer[18].CLK
clk => scan_timer[19].CLK
clk => scan_timer[20].CLK
clk => scan_timer[21].CLK
clk => scan_timer[22].CLK
clk => scan_timer[23].CLK
clk => scan_timer[24].CLK
clk => scan_timer[25].CLK
clk => scan_timer[26].CLK
clk => scan_timer[27].CLK
clk => scan_timer[28].CLK
clk => scan_timer[29].CLK
clk => scan_timer[30].CLK
clk => scan_timer[31].CLK
rst_n => scan_sel[0].ACLR
rst_n => scan_sel[1].ACLR
rst_n => scan_sel[2].ACLR
rst_n => scan_sel[3].ACLR
rst_n => scan_timer[0].ACLR
rst_n => scan_timer[1].ACLR
rst_n => scan_timer[2].ACLR
rst_n => scan_timer[3].ACLR
rst_n => scan_timer[4].ACLR
rst_n => scan_timer[5].ACLR
rst_n => scan_timer[6].ACLR
rst_n => scan_timer[7].ACLR
rst_n => scan_timer[8].ACLR
rst_n => scan_timer[9].ACLR
rst_n => scan_timer[10].ACLR
rst_n => scan_timer[11].ACLR
rst_n => scan_timer[12].ACLR
rst_n => scan_timer[13].ACLR
rst_n => scan_timer[14].ACLR
rst_n => scan_timer[15].ACLR
rst_n => scan_timer[16].ACLR
rst_n => scan_timer[17].ACLR
rst_n => scan_timer[18].ACLR
rst_n => scan_timer[19].ACLR
rst_n => scan_timer[20].ACLR
rst_n => scan_timer[21].ACLR
rst_n => scan_timer[22].ACLR
rst_n => scan_timer[23].ACLR
rst_n => scan_timer[24].ACLR
rst_n => scan_timer[25].ACLR
rst_n => scan_timer[26].ACLR
rst_n => scan_timer[27].ACLR
rst_n => scan_timer[28].ACLR
rst_n => scan_timer[29].ACLR
rst_n => scan_timer[30].ACLR
rst_n => scan_timer[31].ACLR
rst_n => seg_data[0]~reg0.PRESET
rst_n => seg_data[1]~reg0.PRESET
rst_n => seg_data[2]~reg0.PRESET
rst_n => seg_data[3]~reg0.PRESET
rst_n => seg_data[4]~reg0.PRESET
rst_n => seg_data[5]~reg0.PRESET
rst_n => seg_data[6]~reg0.PRESET
rst_n => seg_data[7]~reg0.PRESET
rst_n => seg_sel[0]~reg0.PRESET
rst_n => seg_sel[1]~reg0.PRESET
rst_n => seg_sel[2]~reg0.PRESET
rst_n => seg_sel[3]~reg0.PRESET
rst_n => seg_sel[4]~reg0.PRESET
rst_n => seg_sel[5]~reg0.PRESET
seg_sel[0] <= seg_sel[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_sel[1] <= seg_sel[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_sel[2] <= seg_sel[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_sel[3] <= seg_sel[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_sel[4] <= seg_sel[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_sel[5] <= seg_sel[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_data[0] <= seg_data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_data[1] <= seg_data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_data[2] <= seg_data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_data[3] <= seg_data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_data[4] <= seg_data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_data[5] <= seg_data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_data[6] <= seg_data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_data[7] <= seg_data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_data_0[0] => Mux7.IN10
seg_data_0[1] => Mux6.IN10
seg_data_0[2] => Mux5.IN10
seg_data_0[3] => Mux4.IN10
seg_data_0[4] => Mux3.IN10
seg_data_0[5] => Mux2.IN10
seg_data_0[6] => Mux1.IN10
seg_data_0[7] => Mux0.IN10
seg_data_1[0] => Mux7.IN11
seg_data_1[1] => Mux6.IN11
seg_data_1[2] => Mux5.IN11
seg_data_1[3] => Mux4.IN11
seg_data_1[4] => Mux3.IN11
seg_data_1[5] => Mux2.IN11
seg_data_1[6] => Mux1.IN11
seg_data_1[7] => Mux0.IN11
seg_data_2[0] => Mux7.IN12
seg_data_2[1] => Mux6.IN12
seg_data_2[2] => Mux5.IN12
seg_data_2[3] => Mux4.IN12
seg_data_2[4] => Mux3.IN12
seg_data_2[5] => Mux2.IN12
seg_data_2[6] => Mux1.IN12
seg_data_2[7] => Mux0.IN12
seg_data_3[0] => Mux7.IN13
seg_data_3[1] => Mux6.IN13
seg_data_3[2] => Mux5.IN13
seg_data_3[3] => Mux4.IN13
seg_data_3[4] => Mux3.IN13
seg_data_3[5] => Mux2.IN13
seg_data_3[6] => Mux1.IN13
seg_data_3[7] => Mux0.IN13
seg_data_4[0] => Mux7.IN14
seg_data_4[1] => Mux6.IN14
seg_data_4[2] => Mux5.IN14
seg_data_4[3] => Mux4.IN14
seg_data_4[4] => Mux3.IN14
seg_data_4[5] => Mux2.IN14
seg_data_4[6] => Mux1.IN14
seg_data_4[7] => Mux0.IN14
seg_data_5[0] => Mux7.IN15
seg_data_5[1] => Mux6.IN15
seg_data_5[2] => Mux5.IN15
seg_data_5[3] => Mux4.IN15
seg_data_5[4] => Mux3.IN15
seg_data_5[5] => Mux2.IN15
seg_data_5[6] => Mux1.IN15
seg_data_5[7] => Mux0.IN15


|i2c_eeprom_test|i2c_master_top:i2c_master_top_m0
rst => rst.IN1
clk => clk.IN1
clk_div_cnt[0] => clk_div_cnt[0].IN1
clk_div_cnt[1] => clk_div_cnt[1].IN1
clk_div_cnt[2] => clk_div_cnt[2].IN1
clk_div_cnt[3] => clk_div_cnt[3].IN1
clk_div_cnt[4] => clk_div_cnt[4].IN1
clk_div_cnt[5] => clk_div_cnt[5].IN1
clk_div_cnt[6] => clk_div_cnt[6].IN1
clk_div_cnt[7] => clk_div_cnt[7].IN1
clk_div_cnt[8] => clk_div_cnt[8].IN1
clk_div_cnt[9] => clk_div_cnt[9].IN1
clk_div_cnt[10] => clk_div_cnt[10].IN1
clk_div_cnt[11] => clk_div_cnt[11].IN1
clk_div_cnt[12] => clk_div_cnt[12].IN1
clk_div_cnt[13] => clk_div_cnt[13].IN1
clk_div_cnt[14] => clk_div_cnt[14].IN1
clk_div_cnt[15] => clk_div_cnt[15].IN1
scl_pad_i => scl_pad_i.IN1
scl_pad_o <= i2c_master_byte_ctrl:byte_controller.scl_o
scl_padoen_o <= i2c_master_byte_ctrl:byte_controller.scl_oen
sda_pad_i => sda_pad_i.IN1
sda_pad_o <= i2c_master_byte_ctrl:byte_controller.sda_o
sda_padoen_o <= i2c_master_byte_ctrl:byte_controller.sda_oen
i2c_addr_2byte => txr.OUTPUTSELECT
i2c_addr_2byte => txr.OUTPUTSELECT
i2c_addr_2byte => txr.OUTPUTSELECT
i2c_addr_2byte => txr.OUTPUTSELECT
i2c_addr_2byte => txr.OUTPUTSELECT
i2c_addr_2byte => txr.OUTPUTSELECT
i2c_addr_2byte => txr.OUTPUTSELECT
i2c_addr_2byte => txr.OUTPUTSELECT
i2c_addr_2byte => next_state.DATAB
i2c_addr_2byte => next_state.DATAB
i2c_read_req => next_state.DATAA
i2c_read_req => next_state.DATAA
i2c_read_req_ack <= i2c_read_req_ack.DB_MAX_OUTPUT_PORT_TYPE
i2c_write_req => next_state.OUTPUTSELECT
i2c_write_req => next_state.OUTPUTSELECT
i2c_write_req => Selector1.IN3
i2c_write_req_ack <= i2c_write_req_ack.DB_MAX_OUTPUT_PORT_TYPE
i2c_slave_dev_addr[0] => ~NO_FANOUT~
i2c_slave_dev_addr[1] => Selector19.IN6
i2c_slave_dev_addr[2] => Selector18.IN6
i2c_slave_dev_addr[3] => Selector17.IN6
i2c_slave_dev_addr[4] => Selector16.IN6
i2c_slave_dev_addr[5] => Selector15.IN6
i2c_slave_dev_addr[6] => Selector14.IN6
i2c_slave_dev_addr[7] => Selector13.IN6
i2c_slave_reg_addr[0] => txr.DATAA
i2c_slave_reg_addr[0] => Selector20.IN7
i2c_slave_reg_addr[1] => txr.DATAA
i2c_slave_reg_addr[1] => Selector19.IN7
i2c_slave_reg_addr[2] => txr.DATAA
i2c_slave_reg_addr[2] => Selector18.IN7
i2c_slave_reg_addr[3] => txr.DATAA
i2c_slave_reg_addr[3] => Selector17.IN7
i2c_slave_reg_addr[4] => txr.DATAA
i2c_slave_reg_addr[4] => Selector16.IN7
i2c_slave_reg_addr[5] => txr.DATAA
i2c_slave_reg_addr[5] => Selector15.IN7
i2c_slave_reg_addr[6] => txr.DATAA
i2c_slave_reg_addr[6] => Selector14.IN7
i2c_slave_reg_addr[7] => txr.DATAA
i2c_slave_reg_addr[7] => Selector13.IN7
i2c_slave_reg_addr[8] => txr.DATAB
i2c_slave_reg_addr[9] => txr.DATAB
i2c_slave_reg_addr[10] => txr.DATAB
i2c_slave_reg_addr[11] => txr.DATAB
i2c_slave_reg_addr[12] => txr.DATAB
i2c_slave_reg_addr[13] => txr.DATAB
i2c_slave_reg_addr[14] => txr.DATAB
i2c_slave_reg_addr[15] => txr.DATAB
i2c_write_data[0] => Selector20.IN8
i2c_write_data[1] => Selector19.IN8
i2c_write_data[2] => Selector18.IN8
i2c_write_data[3] => Selector17.IN8
i2c_write_data[4] => Selector16.IN8
i2c_write_data[5] => Selector15.IN8
i2c_write_data[6] => Selector14.IN8
i2c_write_data[7] => Selector13.IN8
i2c_read_data[0] <= i2c_read_data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
i2c_read_data[1] <= i2c_read_data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
i2c_read_data[2] <= i2c_read_data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
i2c_read_data[3] <= i2c_read_data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
i2c_read_data[4] <= i2c_read_data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
i2c_read_data[5] <= i2c_read_data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
i2c_read_data[6] <= i2c_read_data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
i2c_read_data[7] <= i2c_read_data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
error <= error~reg0.DB_MAX_OUTPUT_PORT_TYPE


|i2c_eeprom_test|i2c_master_top:i2c_master_top_m0|i2c_master_byte_ctrl:byte_controller
clk => clk.IN1
rst => rst.IN1
nReset => nReset.IN1
ena => ena.IN1
clk_cnt[0] => clk_cnt[0].IN1
clk_cnt[1] => clk_cnt[1].IN1
clk_cnt[2] => clk_cnt[2].IN1
clk_cnt[3] => clk_cnt[3].IN1
clk_cnt[4] => clk_cnt[4].IN1
clk_cnt[5] => clk_cnt[5].IN1
clk_cnt[6] => clk_cnt[6].IN1
clk_cnt[7] => clk_cnt[7].IN1
clk_cnt[8] => clk_cnt[8].IN1
clk_cnt[9] => clk_cnt[9].IN1
clk_cnt[10] => clk_cnt[10].IN1
clk_cnt[11] => clk_cnt[11].IN1
clk_cnt[12] => clk_cnt[12].IN1
clk_cnt[13] => clk_cnt[13].IN1
clk_cnt[14] => clk_cnt[14].IN1
clk_cnt[15] => clk_cnt[15].IN1
start => core_cmd.OUTPUTSELECT
start => core_cmd.OUTPUTSELECT
start => core_cmd.OUTPUTSELECT
start => c_state.DATAB
start => core_cmd.DATAB
stop => go.IN1
stop => c_state.DATAB
stop => core_cmd.DATAB
stop => cmd_ack.DATAB
stop => c_state.DATAB
read => go.IN0
read => core_cmd.OUTPUTSELECT
read => core_cmd.OUTPUTSELECT
read => core_cmd.DATAA
read => c_state.DATAB
read => core_cmd.DATAB
read => core_cmd.DATAB
read => c_state.DATAB
write => go.IN1
write => core_cmd.DATAA
write => core_cmd.DATAA
ack_in => core_txd.DATAB
ack_in => core_txd.DATAA
din[0] => sr.DATAB
din[1] => sr.DATAB
din[2] => sr.DATAB
din[3] => sr.DATAB
din[4] => sr.DATAB
din[5] => sr.DATAB
din[6] => sr.DATAB
din[7] => sr.DATAB
cmd_ack <= cmd_ack~reg0.DB_MAX_OUTPUT_PORT_TYPE
ack_out <= ack_out~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[0] <= sr[0].DB_MAX_OUTPUT_PORT_TYPE
dout[1] <= sr[1].DB_MAX_OUTPUT_PORT_TYPE
dout[2] <= sr[2].DB_MAX_OUTPUT_PORT_TYPE
dout[3] <= sr[3].DB_MAX_OUTPUT_PORT_TYPE
dout[4] <= sr[4].DB_MAX_OUTPUT_PORT_TYPE
dout[5] <= sr[5].DB_MAX_OUTPUT_PORT_TYPE
dout[6] <= sr[6].DB_MAX_OUTPUT_PORT_TYPE
dout[7] <= sr[7].DB_MAX_OUTPUT_PORT_TYPE
i2c_busy <= i2c_master_bit_ctrl:bit_controller.busy
i2c_al <= i2c_master_bit_ctrl:bit_controller.al
scl_i => scl_i.IN1
scl_o <= i2c_master_bit_ctrl:bit_controller.scl_o
scl_oen <= i2c_master_bit_ctrl:bit_controller.scl_oen
sda_i => sda_i.IN1
sda_o <= i2c_master_bit_ctrl:bit_controller.sda_o
sda_oen <= i2c_master_bit_ctrl:bit_controller.sda_oen


|i2c_eeprom_test|i2c_master_top:i2c_master_top_m0|i2c_master_byte_ctrl:byte_controller|i2c_master_bit_ctrl:bit_controller
clk => sda_chk.CLK
clk => sda_oen~reg0.CLK
clk => scl_oen~reg0.CLK
clk => cmd_ack~reg0.CLK
clk => c_state[0].CLK
clk => c_state[1].CLK
clk => c_state[2].CLK
clk => c_state[3].CLK
clk => c_state[4].CLK
clk => c_state[5].CLK
clk => c_state[6].CLK
clk => c_state[7].CLK
clk => c_state[8].CLK
clk => c_state[9].CLK
clk => c_state[10].CLK
clk => c_state[11].CLK
clk => c_state[12].CLK
clk => c_state[13].CLK
clk => c_state[14].CLK
clk => c_state[15].CLK
clk => c_state[16].CLK
clk => c_state[17].CLK
clk => dout~reg0.CLK
clk => al~reg0.CLK
clk => cmd_stop.CLK
clk => busy~reg0.CLK
clk => sto_condition.CLK
clk => sta_condition.CLK
clk => dSDA.CLK
clk => dSCL.CLK
clk => sSDA.CLK
clk => sSCL.CLK
clk => fSDA[0].CLK
clk => fSDA[1].CLK
clk => fSDA[2].CLK
clk => fSCL[0].CLK
clk => fSCL[1].CLK
clk => fSCL[2].CLK
clk => filter_cnt[0].CLK
clk => filter_cnt[1].CLK
clk => filter_cnt[2].CLK
clk => filter_cnt[3].CLK
clk => filter_cnt[4].CLK
clk => filter_cnt[5].CLK
clk => filter_cnt[6].CLK
clk => filter_cnt[7].CLK
clk => filter_cnt[8].CLK
clk => filter_cnt[9].CLK
clk => filter_cnt[10].CLK
clk => filter_cnt[11].CLK
clk => filter_cnt[12].CLK
clk => filter_cnt[13].CLK
clk => cSDA[0].CLK
clk => cSDA[1].CLK
clk => cSCL[0].CLK
clk => cSCL[1].CLK
clk => clk_en.CLK
clk => cnt[0].CLK
clk => cnt[1].CLK
clk => cnt[2].CLK
clk => cnt[3].CLK
clk => cnt[4].CLK
clk => cnt[5].CLK
clk => cnt[6].CLK
clk => cnt[7].CLK
clk => cnt[8].CLK
clk => cnt[9].CLK
clk => cnt[10].CLK
clk => cnt[11].CLK
clk => cnt[12].CLK
clk => cnt[13].CLK
clk => cnt[14].CLK
clk => cnt[15].CLK
clk => slave_wait.CLK
clk => dscl_oen.CLK
rst => always2.IN1
rst => cSCL.OUTPUTSELECT
rst => cSCL.OUTPUTSELECT
rst => cSDA.OUTPUTSELECT
rst => cSDA.OUTPUTSELECT
rst => always4.IN0
rst => fSCL.OUTPUTSELECT
rst => fSCL.OUTPUTSELECT
rst => fSCL.OUTPUTSELECT
rst => fSDA.OUTPUTSELECT
rst => fSDA.OUTPUTSELECT
rst => fSDA.OUTPUTSELECT
rst => sSCL.OUTPUTSELECT
rst => sSDA.OUTPUTSELECT
rst => dSCL.OUTPUTSELECT
rst => dSDA.OUTPUTSELECT
rst => sta_condition.OUTPUTSELECT
rst => sto_condition.OUTPUTSELECT
rst => busy.OUTPUTSELECT
rst => cmd_stop.OUTPUTSELECT
rst => al.OUTPUTSELECT
rst => always12.IN1
nReset => sda_chk.ACLR
nReset => sda_oen~reg0.PRESET
nReset => scl_oen~reg0.PRESET
nReset => cmd_ack~reg0.ACLR
nReset => c_state[0].ACLR
nReset => c_state[1].ACLR
nReset => c_state[2].ACLR
nReset => c_state[3].ACLR
nReset => c_state[4].ACLR
nReset => c_state[5].ACLR
nReset => c_state[6].ACLR
nReset => c_state[7].ACLR
nReset => c_state[8].ACLR
nReset => c_state[9].ACLR
nReset => c_state[10].ACLR
nReset => c_state[11].ACLR
nReset => c_state[12].ACLR
nReset => c_state[13].ACLR
nReset => c_state[14].ACLR
nReset => c_state[15].ACLR
nReset => c_state[16].ACLR
nReset => c_state[17].ACLR
nReset => busy~reg0.ACLR
nReset => al~reg0.ACLR
nReset => slave_wait.ACLR
nReset => clk_en.PRESET
nReset => cnt[0].ACLR
nReset => cnt[1].ACLR
nReset => cnt[2].ACLR
nReset => cnt[3].ACLR
nReset => cnt[4].ACLR
nReset => cnt[5].ACLR
nReset => cnt[6].ACLR
nReset => cnt[7].ACLR
nReset => cnt[8].ACLR
nReset => cnt[9].ACLR
nReset => cnt[10].ACLR
nReset => cnt[11].ACLR
nReset => cnt[12].ACLR
nReset => cnt[13].ACLR
nReset => cnt[14].ACLR
nReset => cnt[15].ACLR
nReset => cSDA[0].ACLR
nReset => cSDA[1].ACLR
nReset => cSCL[0].ACLR
nReset => cSCL[1].ACLR
nReset => filter_cnt[0].ACLR
nReset => filter_cnt[1].ACLR
nReset => filter_cnt[2].ACLR
nReset => filter_cnt[3].ACLR
nReset => filter_cnt[4].ACLR
nReset => filter_cnt[5].ACLR
nReset => filter_cnt[6].ACLR
nReset => filter_cnt[7].ACLR
nReset => filter_cnt[8].ACLR
nReset => filter_cnt[9].ACLR
nReset => filter_cnt[10].ACLR
nReset => filter_cnt[11].ACLR
nReset => filter_cnt[12].ACLR
nReset => filter_cnt[13].ACLR
nReset => fSDA[0].PRESET
nReset => fSDA[1].PRESET
nReset => fSDA[2].PRESET
nReset => fSCL[0].PRESET
nReset => fSCL[1].PRESET
nReset => fSCL[2].PRESET
nReset => dSDA.PRESET
nReset => dSCL.PRESET
nReset => sSDA.PRESET
nReset => sSCL.PRESET
nReset => sto_condition.ACLR
nReset => sta_condition.ACLR
nReset => cmd_stop.ACLR
ena => always2.IN1
ena => always4.IN1
clk_cnt[0] => cnt.DATAB
clk_cnt[1] => cnt.DATAB
clk_cnt[2] => cnt.DATAB
clk_cnt[2] => filter_cnt.DATAB
clk_cnt[3] => cnt.DATAB
clk_cnt[3] => filter_cnt.DATAB
clk_cnt[4] => cnt.DATAB
clk_cnt[4] => filter_cnt.DATAB
clk_cnt[5] => cnt.DATAB
clk_cnt[5] => filter_cnt.DATAB
clk_cnt[6] => cnt.DATAB
clk_cnt[6] => filter_cnt.DATAB
clk_cnt[7] => cnt.DATAB
clk_cnt[7] => filter_cnt.DATAB
clk_cnt[8] => cnt.DATAB
clk_cnt[8] => filter_cnt.DATAB
clk_cnt[9] => cnt.DATAB
clk_cnt[9] => filter_cnt.DATAB
clk_cnt[10] => cnt.DATAB
clk_cnt[10] => filter_cnt.DATAB
clk_cnt[11] => cnt.DATAB
clk_cnt[11] => filter_cnt.DATAB
clk_cnt[12] => cnt.DATAB
clk_cnt[12] => filter_cnt.DATAB
clk_cnt[13] => cnt.DATAB
clk_cnt[13] => filter_cnt.DATAB
clk_cnt[14] => cnt.DATAB
clk_cnt[14] => filter_cnt.DATAB
clk_cnt[15] => cnt.DATAB
clk_cnt[15] => filter_cnt.DATAB
cmd[0] => Decoder0.IN3
cmd[0] => Equal0.IN3
cmd[1] => Decoder0.IN2
cmd[1] => Equal0.IN0
cmd[2] => Decoder0.IN1
cmd[2] => Equal0.IN2
cmd[3] => Decoder0.IN0
cmd[3] => Equal0.IN1
cmd_ack <= cmd_ack~reg0.DB_MAX_OUTPUT_PORT_TYPE
busy <= busy~reg0.DB_MAX_OUTPUT_PORT_TYPE
al <= al~reg0.DB_MAX_OUTPUT_PORT_TYPE
din => Selector1.IN6
dout <= dout~reg0.DB_MAX_OUTPUT_PORT_TYPE
scl_i => cSCL.DATAA
scl_o <= <GND>
scl_oen <= scl_oen~reg0.DB_MAX_OUTPUT_PORT_TYPE
sda_i => cSDA.DATAA
sda_o <= <GND>
sda_oen <= sda_oen~reg0.DB_MAX_OUTPUT_PORT_TYPE


